{
  "version": 3,
  "sources": [
    "actions/layoutActions.js",
    "actions/types.js",
    "actions/errorActions.js",
    "actions/loginErrorActions.js",
    "actions/userActions.js",
    "actions/postActions.js",
    "actions/authActions.js",
    "components/auth/LoginModal.js",
    "components/auth/RegisterModal.js",
    "components/auth/ForgotPasswordModal.js",
    "components/Nav.js",
    "components/MainMenu.js",
    "components/AddPostModal.js",
    "components/PostsList.js",
    "components/usersTabs/UserItem.js",
    "components/usersTabs/UsersList.js",
    "components/usersTabs/FriendItem.js",
    "components/usersTabs/FriendsList.js",
    "components/usersTabs/InvitationItem.js",
    "components/usersTabs/InvitationsList.js",
    "components/usersTabs/FriendsSection.js",
    "components/usersTabs/UsersTabs.js",
    "App.js",
    "reducers/authReducer.js",
    "reducers/errorReducer.js",
    "reducers/layotRedeucer.js",
    "reducers/registerErrorReducer.js",
    "reducers/loginErrorReducer.js",
    "reducers/usersReducer.js",
    "reducers/postsReducer.js",
    "reducers/index.js",
    "store.js",
    "index.js",
    "helpers/tokenConfig.js",
    "helpers/areTheUsersFriends.js"
  ],
  "names": [
    "openLoginModal",
    "console",
    "log",
    "type",
    "closeLoginModal",
    "openRegisterModal",
    "returnErrors",
    "message",
    "status",
    "payload",
    "id",
    "arguments",
    "length",
    "undefined",
    "returnLoginErrors",
    "follow",
    "currUserId",
    "userToFollowId",
    "_ref",
    "Object",
    "asyncToGenerator",
    "regenerator_default",
    "a",
    "mark",
    "_callee",
    "dispatch",
    "getState",
    "body",
    "wrap",
    "_context",
    "prev",
    "next",
    "tokenConfig",
    "axios",
    "put",
    "sent",
    "t0",
    "stop",
    "_x",
    "_x2",
    "apply",
    "this",
    "updateUser",
    "userId",
    "_ref2",
    "_callee2",
    "res",
    "_context2",
    "concat",
    "data",
    "updatedUser",
    "_x3",
    "_x4",
    "getUsers",
    "_ref3",
    "_callee3",
    "nowInSecends",
    "expireTimeInSec",
    "_context3",
    "Date",
    "getTime",
    "auth",
    "tokenExp",
    "token",
    "logout",
    "abrupt",
    "get",
    "users",
    "_x5",
    "_x6",
    "getPosts",
    "posts",
    "addToPosts",
    "_ref4",
    "_ref5",
    "post",
    "login",
    "rememberMe",
    "email",
    "password",
    "config",
    "user",
    "headers",
    "Content-Type",
    "JSON",
    "stringify",
    "tokenIat",
    "localStorage",
    "setItem",
    "response",
    "LoginModal",
    "state",
    "handleChange",
    "e",
    "_this",
    "setState",
    "defineProperty",
    "target",
    "name",
    "value",
    "handleSubmit",
    "_this$state",
    "_this$props",
    "props",
    "isAuthanticated",
    "toggle",
    "handleClickOnLink",
    "_this$props2",
    "openForgotPasswordModal",
    "renderErrorMessage",
    "react_default",
    "createElement",
    "Grid",
    "padded",
    "Row",
    "Column",
    "Message",
    "error",
    "header",
    "list",
    "renderModalContent",
    "_this$state2",
    "isLoading",
    "Segment",
    "style",
    "height",
    "Dimmer",
    "active",
    "Loader",
    "size",
    "Form",
    "onSubmit",
    "Field",
    "placeholder",
    "onChange",
    "display",
    "alignItems",
    "justifyContent",
    "Checkbox",
    "label",
    "checked",
    "cursor",
    "onClick",
    "Button",
    "color",
    "fluid",
    "prevProps",
    "_this$props3",
    "loginModalOpened",
    "warn",
    "errors",
    "Modal",
    "open",
    "centered",
    "onClose",
    "Header",
    "Content",
    "Component",
    "connect",
    "loginError",
    "layout",
    "RegisterModal",
    "confirmPassword",
    "isRegister",
    "preventDefault",
    "register",
    "handleCloseModal",
    "closeRegisterModal",
    "isAuthenticated",
    "messages",
    "el",
    "push",
    "registerModalOpened",
    "registerError",
    "clearErrors",
    "ForgotPasswordModal",
    "forgotPasswordModalOpened",
    "closeForgotPasswordModal",
    "MainMenu",
    "activeItem",
    "loginModalOpen",
    "registerModalOpen",
    "forgotPasswordOpen",
    "handleItemClick",
    "handleCloseLoginModal",
    "handleCloseRegisterModal",
    "handleOpenLoginModal",
    "redirect",
    "forgotPasswordOpened",
    "Fragment",
    "Menu",
    "secondary",
    "position",
    "Item",
    "Icon",
    "circular",
    "auth_LoginModal",
    "modalOpen",
    "auth_RegisterModal",
    "auth_ForgotPasswordModal",
    "AddPostModal",
    "title",
    "description",
    "closeAddPostModal",
    "addPost",
    "Input",
    "TextArea",
    "rows",
    "addPostModalOpened",
    "author",
    "_id",
    "PostsList",
    "handleClickAddPost",
    "openAddPostModal",
    "renderPostContent",
    "List",
    "selection",
    "verticalAlign",
    "renderPosts",
    "currUser",
    "postsLoading",
    "filter",
    "following",
    "find",
    "u",
    "map",
    "key",
    "marginBottom",
    "flexDirection",
    "Card",
    "authorName",
    "extra",
    "likes",
    "openSocket",
    "on",
    "action",
    "width",
    "primary",
    "paddingLeft",
    "paddingRight",
    "components_AddPostModal",
    "UserItem",
    "ifFollowing",
    "positive",
    "icon",
    "Popup",
    "trigger",
    "handleAddFriendClick",
    "content",
    "UsersList",
    "userToFollow",
    "_this2",
    "updatedCurrUser",
    "updatedUsers",
    "areTheUsersFriends",
    "usersTabs_UserItem",
    "React",
    "FriendItem",
    "friend",
    "FriendsList",
    "usersTabs_FriendItem",
    "InvitationItem",
    "InvitationsList",
    "classCallCheck",
    "possibleConstructorReturn",
    "getPrototypeOf",
    "call",
    "followers",
    "usersTabs_InvitationItem",
    "FriendsSection",
    "divided",
    "relaxed",
    "usersTabs_InvitationsList",
    "usersTabs_FriendsList",
    "UsersTabs",
    "_this3",
    "panes",
    "menuItem",
    "render",
    "Tab",
    "Pane",
    "usersTabs_FriendsSection",
    "usersTabs_UsersList",
    "App",
    "react_router_dom",
    "backgroundColor",
    "Nav",
    "minHeight",
    "components_PostsList",
    "usersTabs_UsersTabs",
    "initialState",
    "getItem",
    "parse",
    "updatingError",
    "combineReducers",
    "objectSpread",
    "removeItem",
    "middleWare",
    "thunk",
    "composeEnhancers",
    "window",
    "__REDUX_DEVTOOLS_EXTENSION_COMPOSE__",
    "compose",
    "store",
    "createStore",
    "rootReducer",
    "applyMiddleware",
    "ReactDOM",
    "es",
    "src_App",
    "document",
    "getElementById",
    "module",
    "exports",
    "Content-type",
    "includes"
  ],
  "mappings": "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",
  "file": "static/js/main.85bc47eb.chunk.js",
  "sourcesContent": [
    "import { OPEN_LOGIN_MODAL, \n    CLOSE_LOGIN_MODAL,\n     OPEN_REGISTER_MODAL, \n     CLOSE_REGISTER_MODAL,\n     CLOSE_FORGOT_PASSWORD_MODAL,\n     OPEN_FORGOT_PASSWORD_MODAL ,\n     OPEN_ADD_POST_MODAL,\n     CLOSE_ADD_POST_MODAL,\n     } from './types';\n\n// OPEN LOGIN MODAL\nexport const openLoginModal = () => {\n    console.log('open login modal');\n    \n    return {\n        type: OPEN_LOGIN_MODAL\n    };\n};\n// CLOSE LOGIN MODAL\nexport const closeLoginModal = () => {\n    return {\n        type: CLOSE_LOGIN_MODAL\n    };\n};\n\n//OPEN REGISTER MODAL\nexport const openRegisterModal = () => {\n    return {\n        type: OPEN_REGISTER_MODAL\n    };\n};\n\n// CLOSE REGISTER MODAL\nexport const closeRegisterModal = () => {\n    return {\n        type: CLOSE_REGISTER_MODAL\n    };\n};\n\n//OPEN FORGOT_PASSWORD MODAL\nexport const openForgotPasswordModal = () => {\n    return {\n        type: OPEN_FORGOT_PASSWORD_MODAL\n    };\n};\n\n// CLOSE FORGOT_PASSWORD MODAL\nexport const closeForgotPasswordModal = () => {\n    return {\n        type: CLOSE_FORGOT_PASSWORD_MODAL\n    };\n};\n\n//OPEN ADD_POST MODAL\nexport const openAddPostModal = () => {\n    return {\n        type: OPEN_ADD_POST_MODAL\n    };\n};\n\n// CLOSE ADD_POST MODAL\nexport const closeAddPostModal = () => {\n    return {\n        type: CLOSE_ADD_POST_MODAL\n    };\n};\n\n\n\n\n\n\n",
    "export const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USERS_LOADING = 'USERS_LOADING';\nexport const USERS_LOADED = 'USERS_LOADED';\nexport const FRIENDS_LOADED = 'FRIENDS_LOADED';\n\nexport const USER_UPDATING = \"USER_UPDATING\";\nexport const USER_UPDATED= 'USER_UPDATED';\nexport const UPDATING_USER_ERROR = \"UPDATING_USER_ERROR\";\n\n\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const GET_REGISTER_ERRORS = 'GET_REGISTER_ERRORS';\nexport const CLEAR_REGISTER_ERRORS = 'CLEAR_REGISTER_ERRORS';\nexport const GET_LOGIN_ERRORS = 'GET_LOGIN_ERRORS';\nexport const CLEAR_LOGIN_ERRORS = 'CLEAR_LOGIN_ERRORS';\nexport const REGISTER_LOADING = 'REGISTER_LOADING';\nexport const LOGIN_LOADING = 'LOGIN_LOADING';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const OPEN_LOGIN_MODAL = 'OPEN_LOGIN_MODAL';\nexport const CLOSE_LOGIN_MODAL = 'CLOSE_LOGIN_MODAL';\nexport const CLOSE_REGISTER_MODAL = 'CLOSE_REGISTER_MODAL';\nexport const OPEN_REGISTER_MODAL = 'OPEN_REGISTER_MODAL';\nexport const CLOSE_FORGOT_PASSWORD_MODAL = 'CLOSE_FORGOT_PASSWORD_MODAL';\nexport const OPEN_FORGOT_PASSWORD_MODAL = 'OPEN_FORGOT_PASSWORD_MODAL';\nexport const OPEN_ADD_POST_MODAL = 'OPEN_ADD_POST_MODAL';\nexport const CLOSE_ADD_POST_MODAL = 'CLOSE_ADD_POST_MODAL';\n\nexport const POSTS_LOADING = 'POSTS_LOADING';\nexport const GET_POSTS = \"GET_POSTS\";\nexport const ADD_POST = \"ADD_POST\";\nexport const ADD_TO_POSTS = \"ADD_TO_POSTS\";\n",
    "\nimport { GET_ERRORS, CLEAR_ERRORS } from './types';\n\n// RETURN ERRORS\nexport const returnErrors = (message, status, id = null) => {\n  return {\n    type: GET_ERRORS,\n    payload: { message, status, id }\n  };\n};\n\n// CLEAR ERRORS\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};",
    "\nimport { GET_LOGIN_ERRORS, CLEAR_LOGIN_ERRORS } from './types';\n\n// RETURN ERRORS\nexport const returnLoginErrors = (message, status, id = null) => {\n  return {\n    type: GET_LOGIN_ERRORS,\n    payload: { message, status, id } \n  };\n};\n\n// CLEAR ERRORS\nexport const clearLoginErrors = () => {\n  return {\n    type: CLEAR_LOGIN_ERRORS\n  }\n}",
    "import axios from 'axios';\nimport {\n  USERS_LOADING,\n  USERS_LOADED,\n  UPDATING_USER_ERROR,\n  USER_UPDATING,\n  USER_UPDATED,\n  FRIENDS_LOADED\n} from './types';\nimport tokenConfig from '../helpers/tokenConfig';\nimport {openLoginModal} from \"./layoutActions\";\nimport {logout} from \"./authActions\";\n\nexport const follow = (currUserId, userToFollowId) => async (dispatch, getState) => {\n  const body = {currUserId, userToFollowId};\n  console.log(tokenConfig(getState))\n\n  try {\n    const res = await axios.put('http://localhost:8000/api/users/', body, tokenConfig(getState));\n\n\n  } catch (err) {\n    console.log(err, 'follow err');\n  }\n\n}\n\n\nexport const updateUser = (userId) => async (dispatch, getState) => {\n\n  dispatch({\n    type: USER_UPDATING,\n  })\n\n  try {\n    const res = await axios.put(`http://localhost:8000/api/users/${userId}`, tokenConfig(getState));\n\n    dispatch({\n      type: USERS_LOADED,\n      payload: res.data.updatedUser\n    })\n\n\n  } catch (err) {\n\n    dispatch({\n      type: UPDATING_USER_ERROR,\n      payload: err\n    })\n\n  }\n\n}\n\n\nexport const getUsers = () => async (dispatch, getState) => {\n\n  dispatch({\n    type: USERS_LOADING,\n\n  })\n\n  //checking if token expire\n  const nowInSecends = new Date().getTime() / 1000;\n  const expireTimeInSec = getState().auth.tokenExp - nowInSecends;\n\n  if (getState().auth.token && expireTimeInSec < 0) {\n    dispatch(logout())\n    dispatch(openLoginModal())\n    return\n  }\n\n\n  try {\n    const res = await axios.get('http://localhost:8000/api/users/', tokenConfig(getState));\n    console.log('22222', res.data)\n    dispatch({\n      type: USERS_LOADED,\n      payload: res.data.users\n    })\n\n\n  } catch (err) {\n    console.log(err, 'ERR z GET USERS ACTION');\n\n  }\n\n}\n\n",
    "import { GET_POSTS, ADD_POST, ADD_TO_POSTS, POSTS_LOADING } from './types';\nimport tokenConfig from '../helpers/tokenConfig';\nimport axios from 'axios';\n\n\nexport const getPosts = () => async (dispatch, getState) => {\n\n  dispatch({\n    type: POSTS_LOADING\n  })\n\n  try {\n    const res = await axios.get('http://localhost:8000/api/posts/', tokenConfig(getState));\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data.posts\n    })\n  } catch (err) {\n    console.log(err)\n  }\n};\n\nexport const addPost = ({ title, description }) => async (dispatch, getState) => {\n\n  const body = { title: title, description: description, author: getState().auth.user._id };\n  try {\n    const res = await axios.post('http://localhost:8000/api/posts/', body, tokenConfig(getState));\n\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const addToPosts = ({ data }) => async (dispatch) => {\n  dispatch({\n    type: ADD_TO_POSTS,\n    payload: data.post\n  })\n}\n\n\n\n\n",
    "import axios from 'axios';\nimport {returnErrors, clearErrors} from './errorActions';\n\nimport {returnLoginErrors} from './loginErrorActions';\nimport {getUsers} from './userActions';\nimport {getPosts} from './postActions';\n\nimport {\n  USERS_LOADED,\n  //   USER_LOADING,\n  //   AUTH_ERROR,\n  LOGIN_LOADING,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  REGISTER_LOADING,\n  OPEN_LOGIN_MODAL,\n  CLOSE_LOGIN_MODAL,\n  CLOSE_REGISTER_MODAL\n} from './types';\n\n// // Check token & load user\n// export const loadUser = () => (dispatch, getState) => {\n//   // User loading\n//   dispatch({ type: USER_LOADING });\n\n//   axios\n//     .get('/api/auth/user', tokenConfig(getState))\n//     .then(res =>\n//       dispatch({\n//         type: USER_LOADED,\n//         payload: res.data\n//       })\n//     )\n//     .catch(err => {\n//       dispatch(returnErrors(err.response.data, err.response.status));\n//       dispatch({\n//         type: AUTH_ERROR\n//       });\n//     });\n// };\n\n// Register User\nexport const register = ({name, email, password, confirmPassword}) => async dispatch => {\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({name, email, password, confirmPassword});\n\n\n  dispatch({\n    type: REGISTER_LOADING\n  })\n\n  try {\n    const res = await axios.post('http://localhost:8000/api/users/', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    })\n    dispatch({\n      type: OPEN_LOGIN_MODAL\n    })\n    dispatch({\n      type: CLOSE_REGISTER_MODAL\n    })\n\n  } catch (err) {\n    dispatch(\n      returnErrors(err, err.response.status, 'REGISTER_FAIL')\n    );\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n\n\n};\n\n// @route   GET api/users/login\n// @desc    Login User / Returning JWT Token\n// @access  Public\nexport const login = ({email, password}, rememberMe) => async dispatch => {\n  console.log(email, password, \"krok 1\");\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({email, password});\n\n  dispatch({\n    type: LOGIN_LOADING,\n  })\n\n  try {\n    const res = await axios.post('http://localhost:8000/api/users/login', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: {\n        user: res.data.user,\n        token: res.data.token,\n        tokenExp: res.data.tokenExp,\n        tokenIat: res.data.tokenIat\n      }\n    })\n\n\n    dispatch(getUsers())\n    dispatch(getPosts())\n    dispatch({\n      type: CLOSE_LOGIN_MODAL,\n    })\n\n    if (rememberMe) {\n      const user = JSON.stringify(res.data.user);\n      localStorage.setItem('user', user);\n      localStorage.setItem('token', res.data.token);\n      localStorage.setItem('tokenExp', res.data.tokenExp);\n\n    }\n\n\n  } catch (err) {\n    console.log(err, 'message bledy z auth login actions');\n\n    dispatch(\n      returnLoginErrors(err, err.response.status, 'REGISTER_FAIL')\n    );\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n\n}\n\n// // Logout User\n// export const logout = () => {\n//   return {\n//     type: LOGOUT_SUCCESS\n//   };\n// };\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT_SUCCESS\n  });\n  dispatch({\n    type: USERS_LOADED,\n    payload: []\n  });\n}\n",
    "import React, { Component } from 'react'\nimport { Button, Modal, Checkbox, Form, Message, Grid, Segment, Dimmer, Loader } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\nimport { openLoginModal, closeLoginModal, openForgotPasswordModal } from '../../actions/layoutActions';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/authActions';\nimport { getUsers } from '../../actions/userActions';\n\nclass LoginModal extends Component {\n    state = {\n        email: '',\n        password: '',\n        rememberMe: false,\n        message: []\n    }\n    componentDidUpdate(prevProps) {\n        const { error } = this.props;\n\n        console.log(error, prevProps.error, \"porownaine z poprzednim\")\n        if (error !== prevProps.error) {\n            // Check for register error\n            // let messages = [];\n\n\n\n\n            if (error.id === 'REGISTER_FAIL') {\n\n                this.setState({ message: error.message.response.data.message });\n            } else {\n                this.setState({ message: null });\n\n\n            }\n        }\n\n        // if (isAuthenticated === true) {\n        //     closeRegisterModal();\n        // }\n\n    }\n\n\n    handleChange = (e) => this.setState({ [e.target.name]: e.target.value })\n    handleSubmit = () => {\n        const { email, password, rememberMe } = this.state;\n        const { login, closeLoginModal, isAuthanticated } = this.props;\n\n        const loginData = { email, password };\n        login(loginData, rememberMe )\n\n        if (isAuthanticated) {\n            this.props.getUsers();\n            closeLoginModal();\n\n        }\n\n\n\n    }\n    toggle = () => this.setState({ rememberMe: !this.state.rememberMe })\n    handleClickOnLink = () => {\n        console.log('test onLink');\n\n        const { closeLoginModal, openForgotPasswordModal } = this.props;\n\n        closeLoginModal();\n        openForgotPasswordModal();\n\n    }\n\n    renderErrorMessage = () => {\n        const { message } = this.state;\n        const error = message.length !== 0 &&\n            <Grid padded='vertically'>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Message\n                            error\n                            header='There was some errors with your submission'\n                            list={[message]}\n                        />\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n\n        return error;\n\n    }\n    renderModalContent = () => {\n        const { email, password } = this.state;\n        const { isLoading } = this.props;\n        const content = isLoading ?\n            <Segment style={{ height: '300px' }}>\n                <Dimmer active>\n                    <Loader size='massive'>Loading</Loader>\n                </Dimmer>\n            </Segment> :\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Field>\n                    <label>Email</label>\n                    <input name='email' placeholder='Email' value={email} onChange={this.handleChange} />\n                </Form.Field>\n                <Form.Field>\n                    <label>Password</label>\n                    <input name='password' type='password' placeholder='Password' value={password} onChange={this.handleChange} />\n                </Form.Field>\n                <Form.Field style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                    <Checkbox label='Remember me' onChange={this.toggle} checked={this.state.rememberMe}/>\n                    <a style={{ cursor: 'pointer' }} onClick={this.handleClickOnLink}>Forgot your password</a>\n                    {/* <Link to='/forgot-password' className='link'>Forgot your password?</Link> */}\n                </Form.Field>\n                <Button color='orange' fluid type='submit'>Submit</Button>\n            </Form>\n\n        return content\n    }\n    render() {\n        const { loginModalOpened, closeLoginModal } = this.props;\n\n        console.warn(this.props.errors, \"errors loginError LOGIN MODAL\");\n        return (\n            <Modal size='tiny' open={loginModalOpened}\n                centered={false}\n                onClose={closeLoginModal}>\n                <Modal.Header>Login</Modal.Header>\n                <Modal.Content>\n                    {this.renderErrorMessage()}\n                    {this.renderModalContent()}\n                </Modal.Content>\n            </Modal>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        isLoading: state.auth.isLoading,\n        error: state.loginError,\n        isAuthanticated: state.auth.isAuthanticated,\n        loginModalOpened: state.layout.loginModalOpened\n    }\n}\n\nexport default connect(mapStateToProps,\n    {\n        login,\n        openLoginModal,\n        closeLoginModal,\n        getUsers,\n        openForgotPasswordModal\n    })(LoginModal);",
    "import React, { Component } from 'react'\nimport { Button, Modal, Form, Message, Grid, Segment, Dimmer, Loader, Image } from 'semantic-ui-react'\nimport { connect } from 'react-redux';\nimport { register } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\nimport { openLoginModal, closeRegisterModal, openRegisterModal } from '../../actions/layoutActions';\n\nclass RegisterModal extends Component {\n    state = {\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        isRegister: false,\n        message: []\n    }\n\n\n\n    componentDidUpdate(prevProps) {\n        const { error, isAuthenticated } = this.props;\n\n        console.log(error, prevProps.error, \"porownaine z poprzednim\")\n        if (error !== prevProps.error) {\n            // Check for register error\n            let messages = [];\n            let errors = error.message.response.data.message;\n\n            if (typeof errors === 'object') {\n                for (const el in errors) {\n                    messages.push(errors[el]);\n                }\n            }\n\n            if (typeof errors === 'string') {\n                messages.push(errors);\n            }\n\n            if (error.id === 'REGISTER_FAIL') {\n\n                this.setState({ message: messages });\n            } else {\n                this.setState({ message: null });\n\n            }\n        }\n\n        // if (isAuthenticated === true) {\n        //     closeRegisterModal();\n        // }\n\n    }\n\n\n\n    handleChange = (e) => this.setState({ [e.target.name]: e.target.value })\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { name, email, password, confirmPassword } = this.state;\n        const { register } = this.props;\n\n        // //ES6 syntax\n        const newUser = { name, email, password, confirmPassword };\n        register(newUser);\n    }\n    handleCloseModal = () => {\n        const { closeRegisterModal } = this.props;\n        closeRegisterModal();\n    }\n\n    renderErrorMessage = () => {\n        const { message } = this.state;\n        const errors = message.length !== 0 &&\n            <Grid padded='vertically'>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Message\n                            error\n                            header='There was some errors with your submission'\n                            list={message}\n                        />\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        return errors\n    }\n\n    renderModalContent = () => {\n        const { name, email, password, confirmPassword } = this.state;\n        const { isLoading } = this.props;\n        \n        const content = isLoading ?\n            <Segment style={{ height: '300px' }}>\n                <Dimmer active>\n                    <Loader size='massive'>Loading</Loader>\n                </Dimmer>\n            </Segment> :\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Field>\n                    <label>Name</label>\n                    <input name='name' placeholder='Name' value={name} onChange={this.handleChange} />\n                </Form.Field>\n                <Form.Field>\n                    <label>Email</label>\n                    <input name='email' placeholder='Email' value={email} onChange={this.handleChange} />\n                </Form.Field>\n                <Form.Field>\n                    <label>Password</label>\n                    <input name='password' type='password' placeholder='Password' value={password} onChange={this.handleChange} />\n                </Form.Field>\n                <Form.Field>\n                    <label>Confirm password</label>\n                    <input name='confirmPassword' type='password' placeholder='Confirm password' value={confirmPassword} onChange={this.handleChange} />\n                </Form.Field>\n                <Button color='orange' fluid type='submit'>Submit</Button>\n            </Form>\n\n        return content\n    }\n\n\n    render() {\n        const { registerModalOpened } = this.props;\n        return (\n            <Modal size='tiny' open={registerModalOpened}\n                onClose={this.handleCloseModal} centered={false} >\n                <Modal.Header>Register</Modal.Header>\n                <Modal.Content>\n                    {this.renderErrorMessage()}\n                    {this.renderModalContent()}\n                </Modal.Content>\n            </Modal>\n        )\n\n    }\n}\n\nconst mapStateToProps = state => ({\n    registerModalOpened: state.layout.registerModalOpened,\n    isLoading: state.auth.isLoading,\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.registerError\n});\n\n\nexport default connect(mapStateToProps,\n    {\n        register,\n        clearErrors,\n        openLoginModal,\n        openRegisterModal,\n        closeRegisterModal\n    })(RegisterModal);",
    "import React, { Component } from 'react'\nimport { Button, Modal, Checkbox, Form, Message, Grid, Segment, Dimmer, Loader } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\nimport { openLoginModal, closeLoginModal, closeForgotPasswordModal } from '../../actions/layoutActions';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/authActions';\nimport { getUsers } from '../../actions/userActions';\n\nclass ForgotPasswordModal extends Component {\n    state = {\n        email: '',\n        message: []\n    }\n  componentWillUnmount\n\n    handleChange = (e) => this.setState({ [e.target.name]: e.target.value })\n    handleSubmit = () => {\n        const { email} = this.state;\n        const { login, closeLoginModal, isAuthanticated } = this.props;\n    }\n\n    handleClickOnLink = () => {\n        console.log('test onLink');\n\n        const { closeLoginModal } = this.props;\n\n        closeLoginModal();\n    }\n\n    renderErrorMessage = () => {\n        const { message } = this.state;\n        const error = message.length !== 0 &&\n            <Grid padded='vertically'>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Message\n                            error\n                            header='There was some errors with your submission'\n                            list={[message]}\n                        />\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n\n        return error;\n\n    }\n    renderModalContent = () => {\n        const { email, password } = this.state;\n        const { isLoading } = this.props;\n        const content = isLoading ?\n            <Segment style={{ height: '300px' }}>\n                <Dimmer active>\n                    <Loader size='massive'>Loading</Loader>\n                </Dimmer>\n            </Segment> :\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Field>\n                    <label>Email</label>\n                    <input name='email' placeholder='Email' value={email} onChange={e => this.setState({ email: e.target.value })} />\n                </Form.Field>\n                <Button color='orange' fluid type='submit'>Reset Password</Button>\n            </Form>\n        return content\n    }\n    render() {\n        const { forgotPasswordModalOpened, closeForgotPasswordModal } = this.props;\n\n        console.warn(this.props.errors, \"errors loginError LOGIN MODAL\");\n        return (\n            <Modal size='tiny' open={forgotPasswordModalOpened}\n                centered={false}\n                onClose={closeForgotPasswordModal}>\n                <Modal.Header>Reset password</Modal.Header>\n                <Modal.Content>\n                    {this.renderErrorMessage()}\n                    {this.renderModalContent()}\n                </Modal.Content>\n            </Modal>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoading: state.auth.isLoading,\n        error: state.loginError,\n        isAuthanticated: state.auth.isAuthanticated,\n        forgotPasswordModalOpened: state.layout.forgotPasswordModalOpened\n    }\n}\n\nexport default connect(mapStateToProps,\n    { login, openLoginModal, closeLoginModal,closeForgotPasswordModal, getUsers })(ForgotPasswordModal);",
    "import React, { Component } from 'react'\nimport { Menu, Icon } from 'semantic-ui-react'\nimport LoginModal from './auth/LoginModal';\nimport RegisterModal from './auth/RegisterModal';\nimport ForgotPasswordModal from './auth/ForgotPasswordModal';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { openLoginModal, openRegisterModal } from '../actions/layoutActions';\nimport { logout } from '../actions/authActions';\n\nclass MainMenu extends Component {\n  state = {\n    // redirect: '',\n    activeItem: '',\n    loginModalOpen: false,\n    registerModalOpen: false,\n    forgotPasswordOpen: false\n  }\n\n  handleItemClick = (e, { name }) => {\n    const { openLoginModal, openRegisterModal, logout } = this.props;\n    //name === 'login' && this.setState({ loginModalOpen: !this.state.loginModalOpen})\n    name === 'login' && openLoginModal();\n    name === 'register' && openRegisterModal();\n    name === 'logout' && logout();\n\n    //name === 'register' && this.setState({ registerModalOpen: true })\n\n    name === 'home' && this.setState({ activeItem: name });\n  }\n\n\n  handleCloseLoginModal = () => this.setState({ loginModalOpen: false })\n  handleCloseRegisterModal = () => this.setState({ registerModalOpen: false })\n  handleOpenLoginModal = () => this.setState({ loginModalOpen: true })\n\n  handleCloseModal = (e) => {\n    e.preventDefault();\n    console.log('rrrrrrrrrclosemodal');\n\n    console.log(\n      e.target.value\n    );\n    this.setState({\n      loginModalOpen: false,\n      registerModalOpen: false\n    })\n  }\n\n\n\n  render() {\n    const { activeItem, redirect } = this.state\n    const { loginModalOpened, registerModalOpened,forgotPasswordOpened, user } = this.props;\n    console.warn(this.props.user, 'user NAV !!!!!!!!!!!!!!!!!!');\n\n    // if (redirect !== '') {\n    //   return <Redirect to={redirect} />\n    // }\n    return (\n      <>\n        <Menu id=\"menu\" secondary  >\n          {user\n            ?\n            <Menu.Menu position='right'>\n              <Menu.Item>\n                <Icon circular name=\"user\" />\n                <span>{this.props.user.name}</span>\n              </Menu.Item>\n              <Menu.Item\n                name='logout'\n                active={activeItem === 'logout'}\n                onClick={this.handleItemClick}\n              />\n            </Menu.Menu>\n            :\n            <Menu.Menu position='right'>\n              <Menu.Item\n                name='login'\n                active={activeItem === 'login'}\n                onClick={this.handleItemClick}\n              />\n              <Menu.Item\n                name='register'\n                active={activeItem === 'register'}\n                onClick={this.handleItemClick}\n              />\n            </Menu.Menu>\n          }\n        </Menu>\n        <LoginModal\n          modalOpen={loginModalOpened}\n        />\n        <RegisterModal\n          modalOpen={registerModalOpened}\n          handleOpenLoginModal={this.handleOpenLoginModal}\n        />\n        <ForgotPasswordModal\n         // modalOpen={true}\n        />\n\n\n\n\n        {/* <RegisterModal  modalOpen={this.state.registerModalOpen} handleCloseRegisterModal={this.handleCloseRegisterModal} handleOpenLoginModal={this.handleOpenLoginModal} />  */}\n      </>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    loginModalOpened: state.layout.loginModalOpened,\n    registerModalOpened: state.layout.registerModalOpened\n  }\n}\n// const mapStateToProps = state => ({\n//   auth: state.auth,\n//   errors: state.errors\n// });\n\nexport default connect(mapStateToProps, { openLoginModal, openRegisterModal, logout })(MainMenu);",
    "import React, { Component } from 'react'\nimport { Menu } from 'semantic-ui-react'\nimport { Redirect, Link } from 'react-router-dom';\n\nexport default class MainMenu extends Component {\n  state = {\n    activeItem: 'dashboard',\n    redirect: ''\n  }\n\n  handleClick = (e, name) => {\n    e.preventDefault();\n\n    console.log(name, 'name')\n\n\n    //console.log(name, 'name w click hanflde')\n    this.setState({\n      activeItem: name.name,\n       redirect: name.name\n    }, () => { console.log(this.state.redirect, 'callback setSTtate MAinMenu') })\n  }\n\n  render() {\n    const { activeItem, redirect } = this.state\n\n    console.log(activeItem, redirect, 'w render');\n\n\n    if (redirect !== '') {\n      return <Redirect to={redirect} />\n    }\n\n\n\n\n\n    return (\n\n\n    <Menu vertical>\n      <Menu.Item href='//google.com' target='_blank'>\n        Visit Google\n</Menu.Item>\n      <Menu.Item link>Link via prop</Menu.Item>\n      <Menu.Item name='profile' link onClick={this.handleClick}>Javascript Link</Menu.Item>\n    </Menu>\n    )\n  }\n}",
    "import React, { Component } from 'react'\nimport { Button, Modal, Checkbox, TextArea, Form, Message, Grid, Segment, Dimmer, Loader, Input } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport openSocket from 'socket.io-client';\nimport { closeAddPostModal } from '../actions/layoutActions';\nimport { addPost, addToPosts } from '../actions/postActions';\n\n\nclass AddPostModal extends Component {\n    state = {\n        title: '',\n        description: '',\n        message: []\n    }\n\n\n\n\n    // handleChange = (e) => this.setState({ [e.target.name]: e.target.value })\n    handleSubmit = () => {\n        const { title, description } = this.state;\n        const { closeAddPostModal, addPost } = this.props;\n        addPost({ title, description });\n        closeAddPostModal();\n    }\n\n\n\n    // renderErrorMessage = () => {\n    //     const { message } = this.state;\n    //     const error = message.length !== 0 &&\n    //         <Grid padded='vertically'>\n    //             <Grid.Row>\n    //                 <Grid.Column>\n    //                     <Message\n    //                         error\n    //                         header='There was some errors with your submission'\n    //                         list={[message]}\n    //                     />\n    //                 </Grid.Column>\n    //             </Grid.Row>\n    //         </Grid>\n\n    //     return error;\n    // }\n\n\n    renderModalContent = () => {\n        const { title, description } = this.state;\n        return <Form onSubmit={this.handleSubmit}>\n            <Form.Field>\n                <label>Title</label>\n                <Input name='title' placeholder='title' value={title} onChange={e => this.setState({ title: e.target.value })} />\n            </Form.Field>\n            <Form.Field>\n                <label>Description</label>\n                <TextArea name='description' rows={3} placeholder='description' value={description} onChange={e => this.setState({ description: e.target.value })} />\n                {/* <Input name='title' placeholder='title' value={title} onChange={e => this.setState({ title: e.target.value })} /> */}\n            </Form.Field>\n            <Button color='orange' fluid onClick={this.handleSubmit}>Add</Button>\n        </Form>\n    }\n    render() {\n        const { addPostModalOpened, closeAddPostModal } = this.props;\n\n        return (\n            <Modal size='tiny'\n                open={addPostModalOpened}\n                centered={false}\n                onClose={closeAddPostModal}\n            >\n                <Modal.Header>Add Post</Modal.Header>\n                <Modal.Content>\n                    {/* {this.renderErrorMessage()} */}\n                    {this.renderModalContent()}\n                </Modal.Content>\n            </Modal>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.auth.user,\n        // isLoading: state.auth.isLoading,\n        error: state.loginError,\n        isAuthanticated: state.auth.isAuthanticated,\n        addPostModalOpened: state.layout.addPostModalOpened,\n        //forgotPasswordModalOpened: state.layout.forgotPasswordModalOpened\n\n        posts: state.posts.posts\n    }\n}\n\nexport default connect(mapStateToProps, { closeAddPostModal, addPost, addToPosts })(AddPostModal);",
    "import React, {Component} from 'react';\nimport {Grid, Card, Icon, Button, Modal, Segment, Dimmer, Loader, List} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport AddPostModal from './AddPostModal';\nimport {openAddPostModal} from '../actions/layoutActions';\nimport {addToPosts} from '../actions/postActions';\nimport openSocket from 'socket.io-client';\n\nclass PostsList extends Component {\n\n\n  componentDidMount() {\n\n    const {addToPosts} = this.props;\n\n    const socket = openSocket('http://localhost:8000');\n    socket.on('posts', data => {\n      if (data.action === 'create') {\n        addToPosts({data});\n      }\n\n    });\n  }\n\n  handleClickAddPost = () => {\n    const {openAddPostModal} = this.props;\n    openAddPostModal();\n  }\n\n  renderPostContent = (title, description) => {\n    return (\n\n      <List selection verticalAlign='middle'>\n        <List.Item>\n          {/* <Image avatar src='/images/avatar/small/helen.jpg' /> */}\n          <List.Content>\n            <List.Header>{title}</List.Header>\n            <p>{description}</p>\n          </List.Content>\n        </List.Item>\n      </List>\n    )\n\n  }\n\n  renderPosts = () => {\n    const {currUser, posts, postsLoading} = this.props;\n\n    if (postsLoading) {\n      return <Segment style={{height: '300px'}}>\n        <Dimmer active>\n          <Loader size='massive'>Loading</Loader>\n        </Dimmer>\n      </Segment>\n    }\n\n    const onlyFriendsPosts = posts.filter(post => {\n      if (post.author === currUser._id) {\n        return post\n      }\n      if(currUser.following.find(u => u === post.author)){\n        return post\n      }\n    })\n\n\n\n    const postsToReturn = onlyFriendsPosts.map((post) => {\n\n      return (\n        <Grid.Row key={post.id}\n                  style={{marginBottom: '20px', display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n          <Card>\n            <Card.Content header={post.title}>\n              <Icon name='user'/>\n              {post.authorName}\n\n            </Card.Content>\n            <Card.Content>\n              {this.renderPostContent(post.title, post.description)}\n            </Card.Content>\n            <Card.Content extra>\n              <Icon name='heart'/>\n              {post.likes}\n            </Card.Content>\n          </Card>\n        </Grid.Row>\n      )\n    })\n\n\n\n    return postsToReturn\n\n  }\n\n  render() {\n    return (\n      <>\n        <Grid padded centered>\n          <Grid.Row>\n            <Grid.Column width=\"6\">\n              <Button\n                fluid\n                primary\n                style={{paddingLeft: '30px', paddingRight: '30px'}}\n                onClick={this.handleClickAddPost}\n              >Add Post</Button>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width=\"6\">\n              {this.renderPosts()}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <AddPostModal/>\n      </>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    currUser: state.auth.user,\n    posts: state.posts.posts,\n    postsLoading: state.posts.postsLoading\n  }\n}\n\nexport default connect(mapStateToProps, {openAddPostModal, addToPosts})(PostsList);",
    "import React from 'react';\nimport {List, Grid, Icon, Popup, Button} from 'semantic-ui-react';\n\n\nconst UserItem = props => {\n  console.log(props, 'props')\n\n\n  return (\n    <List selection verticalAlign='middle'>\n      <List.Item active={false} >\n        <List.Content >\n          <Grid verticalAlign='middle'>\n            <Grid.Column width='12' style={{ display: 'flex', flexDirection: 'row' }}>\n              <Icon name='user' />\n              <List.Header>{props.user.name}</List.Header>\n            </Grid.Column>\n            <Grid.Column width='4' >\n              {props.ifFollowing ?\n                <Button circular positive icon='check'  />\n                :\n                <Popup trigger={<Button circular icon='add' onClick={ () => props.handleAddFriendClick(props.user)} />} content='Send the invitation' />\n              }\n            </Grid.Column>\n          </Grid>\n\n        </List.Content>\n      </List.Item>\n    </List>\n  )\n}\n\nexport default UserItem;\n",
    "import React from 'react'\nimport {Icon, List, Button, ListContent, Grid, Header, Popup} from 'semantic-ui-react'\nimport {connect} from 'react-redux';\nimport { follow} from '../../actions/userActions';\nimport openSocket from 'socket.io-client';\nimport areTheUsersFriends from '../../helpers/areTheUsersFriends';\nimport UserItem from \"./UserItem\";\n\n\nclass UsersList extends React.Component {\n\n\n  handleAddFriendClick = (userToFollow) => {\n    const {currUser, follow} = this.props;\n\n    follow(currUser._id, userToFollow._id);\n\n  }\n\n  render() {\n    const { updatedCurrUser, updatedUsers} = this.props;\n\n\n    const currUser = updatedCurrUser !== null ? updatedCurrUser : this.props.currUser;\n    const users = updatedUsers.length !== 0 ? updatedUsers : this.props.users;\n\n\n    const allUsersExceptTheLoggedOne = users.filter(u => u._id !== currUser._id);\n    return (\n      allUsersExceptTheLoggedOne.map(user => {\n\n        //  const ifFollowing = currUser.following.find(followingId => followingId === user._id) ? true : false;\n        const ifFollowing = currUser.following.find(u => u === user._id);\n\n\n        if (areTheUsersFriends(currUser, user)) {\n          return\n        }\n\n        return (\n          <UserItem ifFollowing={!!ifFollowing}\n                    user={user}\n                    handleAddFriendClick={this.handleAddFriendClick}\n          />\n        )\n      })\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users.users,\n    currUser: state.auth.user,\n    // friends: state.users.friends\n  }\n}\n\n\nexport default connect(mapStateToProps, {follow})(UsersList);",
    "import {Grid, Icon, List} from \"semantic-ui-react\";\nimport React from \"react\";\n\n\nconst FriendItem = props => {\n  return (\n    <List selection verticalAlign='middle'>\n      <List.Item active={false}>\n        <List.Content>\n          <Grid verticalAlign='middle'>\n            <Grid.Column width='12' style={{display: 'flex', flexDirection: 'row'}}>\n              <Icon name='user'/>\n              <List.Header>{props.friend.name}</List.Header>\n            </Grid.Column>\n          </Grid>\n        </List.Content>\n      </List.Item>\n    </List>\n  )\n}\n\nexport default FriendItem;\n\n",
    "import React from 'react'\nimport {Icon, List, Button, Popup, Grid} from 'semantic-ui-react'\nimport {connect} from 'react-redux';\nimport FriendItem from './FriendItem';\n//import {updateUser} from '../../actions/userAction';\nimport openSocket from \"socket.io-client\";\nimport areTheUsersFriends from '../../helpers/areTheUsersFriends';\n\nimport {updateUser} from \"../../actions/userActions\";\n\nclass FriendsList extends React.Component {\n\n  render() {\n    const { updatedCurrUser, updatedUsers} = this.props;\n\n    const currUser = updatedCurrUser !== null ? updatedCurrUser : this.props.currUser;\n    const users = updatedUsers.length !== 0  ? updatedUsers : this.props.users;\n\n\n\n    const friends = users.filter(user => {\n      if (areTheUsersFriends(currUser, user)) {\n        return user\n      }\n\n\n    })\n\n    return (\n      friends.map(friend => {\n        return <FriendItem friend={friend}/>\n      })\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currUser: state.auth.user,\n    users: state.users.users,\n  }\n}\n\n\nexport default connect(mapStateToProps, {updateUser})(FriendsList);",
    "import React from 'react';\nimport {Button, Grid, Header, Icon, List} from \"semantic-ui-react\";\n\nconst InvitationItem = props => {\n  return(\n    <List selection verticalAlign='middle'>\n      <List.Item active={false}>\n        <List.Content>\n          <Grid verticalAlign='middle'>\n            <Grid.Column width='8'\n                         style={{\n                           display: 'flex',\n                           flexDirection: 'row',\n                         }}>\n              <Icon name='user'/>\n              <List.Header>{props.user.name}</List.Header>\n            </Grid.Column>\n            <Grid.Column>\n              <Button circular size=\"tiny\" positive\n                      onClick={() => props.handleAddFriendClick(props.user)}>\n                <Header style={{color:'white'}}> Confirm </Header>\n              </Button>\n            </Grid.Column>\n          </Grid>\n        </List.Content>\n      </List.Item>\n    </List>\n  )\n}\n\nexport default InvitationItem;",
    "import React from 'react'\nimport {Icon, List, Button, Popup, Grid, Header, GridColumn} from 'semantic-ui-react'\nimport {connect} from 'react-redux'\nimport areTheUsersFriends from '../../helpers/areTheUsersFriends'\nimport {follow} from '../../actions/userActions'\nimport openSocket from \"socket.io-client\"\nimport InvitationItem from './InvitationItem'\n\n\nclass InvitationsList extends React.Component {\n  constructor(props) {\n    super(props);\n\n\n  }\n\n\n  handleAddFriendClick = (userToFollow) => {\n    const {currUser, follow} = this.props\n\n    follow(currUser._id, userToFollow._id)\n\n  }\n\n  render() {\n    const {updatedCurrUser, updatedUsers} = this.props\n\n    const currUser = updatedCurrUser ? updatedCurrUser : this.props.currUser;\n    const users = updatedUsers.length !== 0 ? updatedUsers : this.props.users;\n\n\n    return (\n      users.map(user => {\n\n        if (areTheUsersFriends(currUser, user)) {\n          return\n        }\n        const followers = currUser.followers.find(u => u === user._id);\n        console.log(followers, 'followers')\n\n        if (followers) {\n          return <InvitationItem user={user}\n                                 handleAddFriendClick={this.handleAddFriendClick}\n          />\n        }\n      })\n\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currUser: state.auth.user,\n    users: state.users.users,\n  }\n}\n\nexport default connect(mapStateToProps, {follow})(InvitationsList);",
    "import React from 'react';\nimport FriendsList from './FriendsList';\nimport InvitationsList from './InvitationsList';\nimport {List} from 'semantic-ui-react';\n\nclass FriendsSection extends React.Component {\n\n  render() {\n    return (\n      <List divided relaxed>\n        <List.Item>\n          <InvitationsList updatedCurrUser={this.props.updatedCurrUser}\n                           updatedUsers={this.props.updatedUsers}\n          />\n        </List.Item>\n        <List.Item>\n          <FriendsList updatedCurrUser={this.props.updatedCurrUser}\n                       updatedUsers={this.props.updatedUsers}\n          />\n        </List.Item>\n      </List>\n\n    )\n  }\n}\n\n\nexport default FriendsSection;",
    "import React from 'react'\nimport {Tab} from 'semantic-ui-react'\nimport UsersList from './UsersList';\nimport FriendsSection from './FriendsSection';\nimport {connect} from 'react-redux';\nimport openSocket from \"socket.io-client\";\nimport {updateUser} from \"../../actions/userActions\";\n\n\nclass UsersTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      updatedCurrUser: null,\n      updatedUsers: []\n    }\n  }\n\n\n  componentDidMount() {\n    const socket = openSocket('http://localhost:8000');\n\n    socket.on('follow', data => {\n\n      const updatedUsers = this.props.users.map(user => {\n        if (user._id === data.users[1]._id) {\n          return data.users[1]\n        } else if (user._id === data.users[0]._id) {\n          return data.users[0]\n        } else{\n          return user\n        }\n      })\n\n\n\n      if (this.props.currUser._id === data.users[0]._id) {\n        this.setState({\n          updatedCurrUser: data.users[0],\n        })\n      } else if(this.props.currUser._id === data.users[1]._id ){\n\n        this.setState({\n          updatedUsers: updatedUsers\n        })\n      }\n\n\n\n\n    })\n  }\n\n\n  render() {\n\n\n    const panes = [\n      {\n        menuItem: 'Friends',\n        render: () => <Tab.Pane><FriendsSection\n          updatedCurrUser={this.state.updatedCurrUser}\n          updatedUsers={this.state.updatedUsers}\n        /></Tab.Pane>\n      },\n      {\n        menuItem: 'All users', render: () => <Tab.Pane><UsersList\n          updatedCurrUser={this.state.updatedCurrUser}\n          updatedUsers={this.state.updatedUsers}\n        /></Tab.Pane>\n      },\n    ]\n    return (\n      <Tab panes={panes}/>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currUser: state.auth.user,\n    users: state.users.users\n  }\n}\n\n\nexport default connect(mapStateToProps, {updateUser})(UsersTabs);",
    "import React, { Component } from 'react';\n// import './App.css';\nimport Nav from './components/Nav';\nimport { Grid, Segment, Header, Button } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\n\nimport MainMenu from './components/MainMenu';\nimport PostsList from './components/PostsList';\nimport openSocket from 'socket.io-client';\nimport { getUsers } from './actions/userActions';\nimport { getPosts } from './actions/postActions';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { login, logout } from './actions/authActions';\nimport UsersTabs from './components/usersTabs/UsersTabs';\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.getUsers();\n    this.props.getPosts();\n  }\n\n\n\n  renderPosts = () => {\n    return <Segment ><div>test</div></Segment>\n  }\n\n  render() {\n\n    return (\n      <BrowserRouter>\n        <Grid padded centered style={{ backgroundColor: '#f5f5f5' }}>\n          <Grid.Row style={{ backgroundColor: 'white' }}>\n            <Grid.Column width=\"16\" >\n              <Nav />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row id='main-content' >\n            <Grid.Column width=\"13\">\n              <Segment style={{ minHeight: '70vh' }}>\n                {this.props.user &&\n                  <PostsList />\n                }\n              </Segment>\n            </Grid.Column>\n            {this.props.user &&\n                <Grid.Column width=\"3\">\n                  <UsersTabs />\n                </Grid.Column>\n            }\n\n\n          </Grid.Row>\n        </Grid>\n      </BrowserRouter>\n\n      // <BrowserRouter>\n      //   <Switch>\n      //     <Route exact path='/' component={App} />\n      //   </Switch>\n      // </BrowserRouter>\n\n\n\n\n      // <Grid padded centered >\n      //   <Grid.Row>\n      //     <Grid.Column width=\"14\" >\n      //       <Nav />\n      //     </Grid.Column>\n      //   </Grid.Row>\n      //   <Grid.Row id='main-content' >\n      //     <Grid.Column width=\"2\">\n      //       <MainMenu />\n      //     </Grid.Column>\n      //     <Grid.Column width=\"10\" stretched style={{ minHeight: '50vh' }}>\n      //       <Segment centered textAlign='center'>\n      //         <Header as='h1'>Welcome</Header>\n      //       </Segment>\n      //     </Grid.Column>\n      //     <Grid.Column width=\"2\">\n      //       <UsersList />\n      //     </Grid.Column>\n      //   </Grid.Row>\n      // </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    isAuthanticated: state.auth.isAuthanticated,\n    posts: state.posts.posts\n\n  }\n}\n\nexport default connect(mapStateToProps, { getUsers, getPosts, login, })(App);\n",
    "import {\n  USER_LOADED,\n  USER_LOADING,\n  // AUTH_ERROR,\n  LOGIN_LOADING,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n   LOGOUT_SUCCESS,\n  REGISTER_LOADING,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n\n} from '../actions/types';\n\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  tokenExp: localStorage.getItem('tokenExp'),\n  isAuthenticated: false,\n  isLoading: false,\n  user: JSON.parse(localStorage.getItem('user'))\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    // case USER_LOADING:\n    //   return {\n    //     ...state,\n    //     isLoading: true\n    //   };\n    // case USER_LOADED:\n    //   return {\n    //     ...state,\n    //     isAuthenticated: true,\n    //     isLoading: false,\n    //     user: action.payload\n    //   };\n\n    case REGISTER_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      }\n    case REGISTER_SUCCESS:\n      //localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        //isAuthenticated: true,\n        isLoading: false\n      };\n    // case AUTH_ERROR:\n    case LOGIN_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      }\n    // case LOGIN_SUCCESS:\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        token: action.payload.token,\n        tokenExp: action.payload.tokenExp,\n        user: action.payload.user,\n        isAuthenticated: true,\n        isLoading: false\n      }\n    // case LOGIN_FAIL:\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      }\n    // case LOGOUT_SUCCESS:\n    case LOGOUT_SUCCESS:\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('tokenExp');\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n\n      }\n    case REGISTER_FAIL:\n      //localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        user: null,\n        //isAuthenticated: false,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n}",
    "\nimport { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\n\nconst initialState = {\n  message: {},\n  status: null,\n  id: null\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case GET_ERRORS:\n      return {\n        message: action.payload.message,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case CLEAR_ERRORS:\n      return {\n        message: {},\n        status: null,\n        id: null\n      };\n    default:\n      return state;\n  }\n}",
    "import {\n    OPEN_LOGIN_MODAL, CLOSE_LOGIN_MODAL, OPEN_REGISTER_MODAL, CLOSE_REGISTER_MODAL\n    , OPEN_FORGOT_PASSWORD_MODAL, CLOSE_FORGOT_PASSWORD_MODAL,\n    OPEN_ADD_POST_MODAL,\n    CLOSE_ADD_POST_MODAL\n} from '../actions/types';\n\nconst initialState = {\n    loginModalOpened: false,\n    registerModalOpened: false,\n    forgotPasswordOpened: false,\n    addPostModalOpened: false\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case OPEN_LOGIN_MODAL:\n            return {\n                ...state,\n                loginModalOpened: true,\n            };\n        case CLOSE_LOGIN_MODAL:\n            return {\n                ...state,\n                loginModalOpened: false\n            };\n        case OPEN_REGISTER_MODAL:\n\n            return {\n                ...state,\n                registerModalOpened: true\n            };\n        case CLOSE_REGISTER_MODAL:\n            return {\n                ...state,\n                registerModalOpened: false\n            };\n        case OPEN_FORGOT_PASSWORD_MODAL:\n\n            return {\n                ...state,\n                forgotPasswordModalOpened: true\n            };\n        case CLOSE_FORGOT_PASSWORD_MODAL:\n            return {\n                ...state,\n                forgotPasswordModalOpened: false\n            };\n        case OPEN_ADD_POST_MODAL:\n            return {\n                ...state,\n                addPostModalOpened: true\n            };\n        case CLOSE_ADD_POST_MODAL:\n            return {\n                ...state,\n                addPostModalOpened: false\n            };\n        default:\n            return state;\n    }\n}",
    "\nimport { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\n\nconst initialState = {\n  message: {},\n  status: null,\n  id: null\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case GET_ERRORS:\n      return {\n        message: action.payload.message,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case CLEAR_ERRORS:\n      return {\n        message: {},\n        status: null,\n        id: null\n      };\n    default:\n      return state;\n  }\n}",
    "\nimport { GET_LOGIN_ERRORS, CLEAR_LOGIN_ERRORS } from '../actions/types';\n\nconst initialState = {\n  message: {},\n  status: null,\n  id: null\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case GET_LOGIN_ERRORS:\n      return {\n        message: action.payload.message,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case CLEAR_LOGIN_ERRORS:\n      return {\n        message: {},\n        status: null,\n        id: null\n      };\n    default:\n      return state;\n  }\n}",
    "import {\n  USERS_LOADED,\n  USERS_LOADING,\n  UPDATING_USER_ERROR,\n  USER_UPDATING,\n  USER_UPDATED,\n\n} from '../actions/types';\n\n\nconst initialState = {\n  isLoading: false,\n  updatingError: null,\n  users: [],\n\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case USERS_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case USER_UPDATING:\n    case USERS_LOADED:\n      return {\n        ...state,\n        isLoading: false,\n        users: action.payload\n      };\n    case USER_UPDATED:\n      return {\n        ...state,\n        users: state.users.map(user => {\n          if (user._id === action.payload._id) {\n            return {\n              ...action.payload,\n\n            }\n          }\n          return user\n        })\n      }\n\n    case UPDATING_USER_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        updatingError: action.payload\n\n      }\n    default:\n      return state;\n  }\n}",
    "import {\n  GET_POSTS,\n  ADD_POST,\n  ADD_TO_POSTS,\n  POSTS_LOADING\n} from '../actions/types';\n\n\nconst initialState = {\n  postsLoading: false,\n  posts: []\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: action.payload,\n        postsLoading: false\n      };\n    case POSTS_LOADING:\n      return {\n        ...state,\n        postsLoading: true\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: state.posts.concat(action.payload)\n      }\n    case ADD_TO_POSTS:\n\n      return {\n\n        ...state,\n        posts: state.posts.concat(action.payload)\n      }\n    default:\n      return state;\n  }\n}",
    "import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\nimport layoutReducer from './layotRedeucer';\nimport registerErrorReducer from './registerErrorReducer';\nimport loginErrorReducer from './loginErrorReducer';\nimport usersReducer from './usersReducer';\nimport postsReducer from './postsReducer';\n\nexport default combineReducers({\n    posts: postsReducer,\n    users: usersReducer,\n    loginError: loginErrorReducer,\n    registerError: registerErrorReducer,\n    error: errorReducer,\n    auth: authReducer,\n    layout: layoutReducer\n});",
    "import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst middleWare = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleWare))\n);\n\nexport default store;",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n                <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// ReactDOM.render(\n//     <Provider store={store}>\n//         <BrowserRouter>\n//             <Switch>\n//                 <Route exact path='/' component={App} />\n//             </Switch>\n//         </BrowserRouter>\n//     </Provider>\n//     , document.getElementById('root'));\n\n",
    "// Setup config/headers and token\nconst tokenConfig = getState => {\n  // Get token from localstorage\n  const token = getState().auth.token;\n\n  console.warn(token, 'TOKEN W TOKEN CONFIG FUNC :)  W USER ACTION')\n\n  // Headers\n  const config = {\n      headers: {\n          'Content-type': 'application/json'\n      }\n  };\n\n  // If token, add to headers\n  if (token) {\n     // config.headers['x-auth-token'] = token;\n      config.headers['Authorization'] = token;\n\n  }\n\n  return config;\n}\n\nmodule.exports = tokenConfig;",
    "const areTheUsersFriends = (currUser, user) => {\n\n    if (currUser.following.includes(user._id) && currUser.followers.includes(user._id)){\n      return true;\n    } else {\n      return false;\n    }\n\n}\n\n\nmodule.exports = areTheUsersFriends;"
  ],
  "sourceRoot": ""
}